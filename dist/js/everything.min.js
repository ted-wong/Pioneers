function getArray(a){for(var b=[],c=0;a>c;c++)b[c]=c;return b}function getZerosArray(a){for(var b=[],c=0;a>c;c++)b[c]=0;return b}function numberResourceCards(a){for(var b=0,c=0;c<Resource.SIZE;c++)b+=a.resources[c];return b}function stealFromPlayer(a,b){if(0!==numberResourceCards(b))for(var c=Math.floor(Math.random()*numberResourceCards(b))+1,d=0,e=0;e<Resource.SIZE;e++){if(d=b.resources[e],d>=c)return b.resources[e]--,void a.resources[e]++;c-=d}}function canAffordConstruction(a,b){switch(b){case Construction.Road:if(a.resources[Resource.Brick]>=1&&a.resources[Resource.Lumber]>=1)return!0;break;case Construction.Settlement:if(a.resources[Resource.Brick]>=1&&a.resources[Resource.Lumber]>=1&&a.resources[Resource.Wool]>=1&&a.resources[Resource.Grain]>=1)return!0;break;case Construction.City:if(a.resources[Resource.Grain]>=2&&a.resources[Resource.Ore]>=3)return!0;break;case Construction.DevCard:if(a.resources[Resource.Wool]>=1&&a.resources[Resource.Grain]>=1&&a.resources[Resource.Ore]>=1)return!0;break;default:return!1}return!1}function hasSufficientConstructsToBuild(a,b,c){switch(b){case Construction.Road:if(a.construction[Construction.Road]<15)return!0;break;case Construction.Settlement:if(a.construction[Construction.Settlement]<5)return!0;break;case Construction.City:if(a.construction[Construction.City]<4&&a.construction[Construction.Settlement]>0)return!0;break;case Construction.DevCard:for(var d=0;d<c.devCards.length;d++)if(c.devCards[d]>0)return!0;break;default:return!1}return!1}function hasAdjacentRoad(a,b,c,d,e){if(b[c][d].edges[e]===a.id)return!0;if(b[c][d].edges[(e+1)%6]===a.id)return!0;for(var f=getHexesAdjacentToVertex(c,d,e),g=0;g<f.length;g++)if(0!==f[g].length){if(b[f[g][0]][f[g][1]].edges[f[g][2]]===a.id)return!0;if(b[f[g][0]][f[g][1]].edges[(f[g][2]+1)%6]===a.id)return!0}return!1}function hasNearbyConstruct(a,b,c,d){if(a[b][c].vertices[d]===Construction.Settlement||a[b][c].vertices[d]===Construction.City)return!0;if(a[b][c].vertices[(d+1)%6]===Construction.Settlement||a[b][c].vertices[(d+1)%6]===Construction.City||a[b][c].vertices[((d-1)%6+6)%6]===Construction.Settlement||a[b][c].vertices[((d-1)%6+6)%6]===Construction.City)return!0;for(var e=getHexesAdjacentToVertex(b,c,d),f=0;f<e.length;f++)if(null!==e[f]&&(a[e[f][0]][e[f][1]].vertices[(e[f][3]+1)%6]===Construction.Settlement||a[e[f][0]][e[f][1]].vertices[(e[f][3]+1)%6]===Construction.City||a[e[f][0]][e[f][1]].vertices[((e[f][3]-1)%6+6)%6]===Construction.Settlement||a[e[f][0]][e[f][1]].vertices[((e[f][3]-1)%6+6)%6]===Construction.City))return!0;return!1}function getHexAdjcentToEdgeUnfiltered(a,b,c){return 0===c?[a,b+1]:1===c&&a%2===0?[a-1,b+1]:1===c&&a%2===1?[a-1,b]:2===c&&a%2===0?[a-1,b]:2===c&&a%2===1?[a-1,b-1]:3===c?[a,b-1]:4===c&&a%2===0?[a+1,b]:4===c&&a%2===1?[a+1,b-1]:5===c&&a%2===0?[a+1,b+1]:5===c&&a%2===1?[a+1,b]:[]}function getHexAdjcentToEdge(a,b,c){var d=getHexAdjcentToEdgeUnfiltered(a,b,c);return d[0]<0||d[1]<0||d[0]>=gameLogic.ROWS||d[1]>=gameLogic.COLS?[]:d}function getHexesAdjacentToVertexUnfiltered(a,b,c){return 0===c&&a%2===0?[[a,b+1,2],[a-1,b+1,4]]:0===c&&a%2===1?[[a,b+1,2],[a-1,b,4]]:1===c&&a%2===0?[[a-1,b,5],[a-1,b+1,3]]:1===c&&a%2===1?[[a-1,b-1,5],[a-1,b,3]]:2===c&&a%2===0?[[a,b-1,0],[a-1,b,4]]:2===c&&a%2===1?[[a,b-1,0],[a-1,b-1,4]]:3===c&&a%2===0?[[a,b-1,5],[a+1,b,1]]:3===c&&a%2===1?[[a,b-1,5],[a+1,b-1,1]]:4===c&&a%2===0?[[a+1,b,0],[a+1,b+1,2]]:4===c&&a%2===1?[[a+1,b-1,0],[a+1,b,2]]:5===c&&a%2===0?[[a+1,b+1,1],[a,b+1,3]]:5===c&&a%2===1?[[a+1,b,1],[a,b+1,3]]:[]}function getHexesAdjacentToVertex(a,b,c){var d=getHexesAdjacentToVertexUnfiltered(a,b,c),e=d[0],f=d[1];return e[0]<0||e[1]<0||e[0]>=gameLogic.ROWS||e[1]>=gameLogic.COLS?f[0]<0||f[1]<0||f[0]>=gameLogic.ROWS||f[1]>=gameLogic.COLS?[]:[f]:f[0]<0||f[1]<0||f[0]>=gameLogic.ROWS||f[1]>=gameLogic.COLS?[e]:[e,f]}function findRoadSubLength(a,b,c,d,e,f){if(!hasAdjacentRoad(a,b,c,d,e))return 0;f.push('"'+c+", "+d+", "+e+'"');var g=getHexesAdjacentToVertex(c,d,e),h=g[0],i=g[1],j=0,k=0,l=0,m=getHexesAdjacentToVertex(c,d,(e+1)%6),n=m[0],o=m[1];return-1===f.indexOf('"'+c+", "+d+", "+(e+1)%6+'"')&&-1===f.indexOf('"'+n[0]+", "+n[1]+", "+n[2]+'"')&&-1===f.indexOf('"'+o[0]+", "+o[1]+", "+o[2]+'"')&&b[c][d].edges[(e+1)%6]===a.id&&(j=1+findRoadSubLength(a,b,c,d,(e+1)%6,angular.copy(f))),p=getHexesAdjacentToVertex(h[0],h[1],(h[2]+1)%6),n=p[0],o=p[1],-1===f.indexOf('"'+h[0]+", "+h[1]+", "+(h[2]+1)%6+'"')&&-1===f.indexOf('"'+n[0]+", "+n[1]+", "+n[2]+'"')&&-1===f.indexOf('"'+o[0]+", "+o[1]+", "+o[2]+'"')&&b[h[0]][h[1]].edges[(h[2]+1)%6]===a.id&&(k=1+findRoadSubLength(a,b,h[0],h[1],(h[2]+1)%6,angular.copy(f))),q=getHexesAdjacentToVertex(i[0],i[1],(i[2]+1)%6),n=q[0],o=q[1],-1===f.indexOf('"'+i[0]+", "+i[1]+", "+(i[2]+1)%6+'"')&&-1===f.indexOf('"'+n[0]+", "+n[1]+", "+n[2]+'"')&&-1===f.indexOf('"'+o[0]+", "+o[1]+", "+o[2]+'"')&&b[i[0]][i[1]].edges[(i[2]+1)%6]===a.id&&(l=1+findRoadSubLength(a,b,i[0],i[1],(i[2]+1)%6,angular.copy(f))),1===f.length?k>j&&l>j?k+l:j>k&&l>k?j+l:j+k:l>k?l:k;var p,q}function getNextStateToBuildRoad(a,b,c,d,e){var f=getHexAdjcentToEdge(b,c,d),g=f[0],h=f[1],i=(d+3)%6;return a[b][c].edges[d]=e,a[g][h].edges[i]=e,a}function getNextStateToBuild(a,b){var c=b.hexRow,d=b.hexCol,e=b.vertexOrEdge,f=b.playerIdx;if(b.consType===Construction.Road)return getNextStateToBuildRoad(a,c,d,e,f);for(var g=getHexesAdjacentToVertex(c,d,e),h=0;h<g.length;h++){var i=g[h],j=i[0],k=i[1],l=i[2];a[j][k].vertexOwner[l]=f,a[j][k].vertices[l]=b.consType}return a[c][d].vertexOwner[e]=f,a[c][d].vertices[e]=b.consType,a}var gameLogic;!function(a){function b(a,b){return Math.floor(Math.random()*(b-a))+a}function c(){var a=n();return a.board[3][3].label}function d(a){for(var b=angular.copy(a),c=void 0,d=void 0,e=b.length;e;c=Math.floor(Math.random()*e),d=b[--e],b[e]=b[c],b[c]=d);return b}function e(b,c){if(0===b||0===c||b===a.ROWS-1||c===a.COLS-1)return!0;if(1===b||5===b){if(1===c||c>4)return!0}else if((2===b||4===b)&&c>4)return!0;return!1}function f(b){for(var c=[],d=0;d<a.ROWS;d++){c[d]=[];for(var e=0;e<a.COLS;e++)c[d][e]=0===d||0===e||d===a.ROWS-1||e===a.COLS-1}for(var f=[[1,0],[0,1],[-1,0],[0,-1]],g=1,h=1,i=0,j=0;!c[g][h];)c[g][h]=!0,b[g][h].label!==Resource.Water&&b[g][h].label!==Resource.Dust&&(b[g][h].rollNum=tokens[i++]),c[g+f[j][0]][h+f[j][1]]&&(j=(j+1)%f.length),g+=f[j][0],h+=f[j][1];return b}function g(a,b){for(var c=0;c<harborPos.length;c++)if(harborPos[c][0]===a&&harborPos[c][1]===b)return harbors[c];return null}function h(){for(var b=[],c=d(terrains),h=0,i=0;i<a.ROWS;i++){b[i]=[];for(var j=0;j<a.COLS;j++){var k=[-1,-1,-1,-1,-1,-1],l=[-1,-1,-1,-1,-1,-1],m=[-1,-1,-1,-1,-1,-1],n=e(i,j)?Resource.Water:c[h++],o={label:n,edges:k,vertices:l,vertexOwner:m,rollNum:-1,harbor:g(i,j),hasRobber:n===Resource.Dust};b[i][j]=o}}return f(b)}function i(a){for(var b=[],c=0;a>c;c++)b[c]=0;return b}function j(){for(var b=[],c=0;c<a.NUM_PLAYERS;c++)b[c]={id:c,points:0,resources:i(Resource.SIZE),devCards:i(DevCard.SIZE),knightsPlayed:0,longestRoad:0,construction:i(Construction.SIZE)};return b}function k(){for(var a={resources:i(Resource.SIZE),devCards:i(DevCard.SIZE),devCardsOrder:null},b=0;b<Resource.SIZE;b++)a.resources[b]=19;for(var c=[],b=0;b<DevCard.SIZE;b++)switch(b){case DevCard.Knight:a.devCards[b]=14;for(var e=0;14>e;e++)c.push(DevCard.Knight);break;case DevCard.Monopoly:a.devCards[b]=2;for(var e=0;2>e;e++)c.push(DevCard.Monopoly);break;case DevCard.RoadBuilding:a.devCards[b]=2;for(var e=0;2>e;e++)c.push(DevCard.RoadBuilding);break;case DevCard.YearOfPlenty:a.devCards[b]=2;for(var e=0;2>e;e++)c.push(DevCard.YearOfPlenty);break;case DevCard.VictoryPoint:a.devCards[b]=5;for(var e=0;5>e;e++)c.push(DevCard.VictoryPoint)}return a.devCardsOrder=d(c),a}function l(){return{longestRoad:{player:-1,length:4},largestArmy:{player:-1,num:2}}}function m(b){for(var c=-1,d=-1,e=0;e<a.ROWS;e++)for(var f=0;f<a.COLS;f++)if(b[e][f].hasRobber){c=e,d=f;break}return{row:c,col:d}}function n(){var a=h(),b=m(a);return{board:a,dices:[1,1],players:j(),bank:k(),awards:l(),robber:b,diceRolled:!1,devCardsPlayed:!1,delta:null,moveType:MoveType.INIT_BUILD,eventIdx:0,building:null}}function o(a,b,c){switch(b.building.consType){case Construction.Road:r(a,b,c);break;case Construction.Settlement:s(a,b,c);break;default:throw new Error("Invalid build during initialization!")}}function p(a,b,c){if(a.diceRolled)throw new Error("Dices already rolled")}function q(a,b,c){if(!canAffordConstruction(a,b))throw new Error("Insufficient resources to build "+Construction[b]);if(!hasSufficientConstructsToBuild(a,b,c))throw new Error("Has no enough constructions to build "+b)}function r(a,b,c){var d=b.building,e=b.players[c];if(d.init||q(a.players[c],Construction.Road,a.bank),!u(e,a.board,d.hexRow,d.hexCol,d.vertexOrEdge,d.init))throw new Error("Cannot build road legally!")}function s(a,b,c){var d=b.building,e=b.players[c];if(d.init||q(a.players[c],Construction.Settlement,a.bank),!v(e,a.board,d.hexRow,d.hexCol,d.vertexOrEdge,d.init))throw new Error("Cannot build settlement legally!")}function t(a,b,c){q(a.players[c],Construction.City,a.bank);var d=b.building,e=b.players[c];if(!w(e,a.board,d.hexRow,d.hexCol,d.vertexOrEdge))throw new Error("Cannot build city legally!")}function u(b,c,d,e,f,g){if(0>f||f>5)return!1;if(0>d||d>a.ROWS||0>e||e>a.COLS)return!1;if(-1!==c[d][e].edges[f])return!1;var h=getHexAdjcentToEdge(d,e,f);return 0===h.length?!1:c[d][e].label===Resource.Water&&c[h[0]][h[1]].label===Resource.Water?!1:c[d][e].edges[((f+1)%6+6)%6]===b.id||c[d][e].edges[((f-1)%6+6)%6]===b.id||c[h[0]][h[1]].edges[((f+3+1)%6+6)%6]===b.id||c[h[0]][h[1]].edges[((f+3-1)%6+6)%6]===b.id?(c[d][e].edges[((f+1)%6+6)%6]!==b.id||c[d][e].vertices[f]!==Construction.Settlement&&c[d][e].vertices[f]!==Construction.City||c[d][e].vertexOwner[f]===b.id)&&(c[d][e].edges[((f-1)%6+6)%6]!==b.id||c[d][e].vertices[((f-1)%6+6)%6]!==Construction.Settlement&&c[d][e].vertices[((f-1)%6+6)%6]!==Construction.City||c[d][e].vertexOwner[((f-1)%6+6)%6]===b.id)&&(c[h[0]][h[1]].edges[((f+3-1)%6+6)%6]!==b.id||c[d][e].vertices[f]!==Construction.Settlement&&c[d][e].vertices[f]!==Construction.City||c[d][e].vertexOwner[f]===b.id)&&(c[h[0]][h[1]].edges[((f+3+1)%6+6)%6]!==b.id||c[d][e].vertices[((f-1)%6+6)%6]!==Construction.Settlement&&c[d][e].vertices[((f-1)%6+6)%6]!==Construction.City||c[d][e].vertexOwner[((f-1)%6+6)%6]===b.id)?!0:!1:c[d][e].vertexOwner[f]===b.id||c[d][e].vertexOwner[(f+5)%6]===b.id?!0:!1}function v(b,c,d,e,f,g){if(0>f||f>5)return!1;if(0>d||d>=a.ROWS||0>e||e>=a.COLS)return!1;if(-1!==c[d][e].vertices[f])return!1;var h=!1;c[d][e].label!=Resource.Water&&(h=!0);for(var i=getHexesAdjacentToVertex(d,e,f),j=0;j<i.length;j++)null!==i[j]&&c[i[j][0]][i[j][1]].label!=Resource.Water&&(h=!0);if(h===!1)return!1;if(hasNearbyConstruct(c,d,e,f))return!1;for(var j=0;j<i.length;j++)if(null!==i[j]&&hasNearbyConstruct(c,i[j][0],i[j][1],i[j][2]))return!1;return g?!0:hasAdjacentRoad(b,c,d,e,f)?!0:!1}function w(b,c,d,e,f){return 0>f||f>5?!1:0>d||d>=a.ROWS||0>e||e>=a.COLS?!1:c[d][e].vertices[f]===Construction.Settlement&&c[d][e].vertexOwner[f]===b.id?!0:!1}function x(a,b,c){if(!a.diceRolled)throw new Error("Need to roll dices first");B(b.players[c].resources)}function y(a,b,c){if(a.devCardsPlayed)throw new Error("Already played development cards");try{B(b.bank.resources)}catch(d){throw new Error("Bank Error: "+d.message)}}function z(a,b,c){for(var d=0,e=0,f=0;f<Resource.SIZE;f++)d+=a.players[c].resources[f],e+=b.players[c].resources[f];if(d>7&&e>d/2)throw new Error("Need to toss half of resource cards")}function A(a,b,c){if(angular.equals(a.robber,b.robber))throw new Error("Need to move robber")}function B(a){for(var b=0;b<Resource.SIZE;b++)if(a[b]<0)throw new Error("Insufficient resources: "+Resource[b])}function C(b,c,d){for(var e=0;e<a.ROWS;e++)for(var f=0;f<a.COLS;f++)if(null!==b[e][f].harbor&&b[e][f].harbor.trading===Resource.ANY&&b[e][f].harbor.trading===c)for(var g=b[e][f].harbor,h=0;6>h;h++)if(b[e][f].vertexOwner[h]===d&&(g.vertices[0]===h||g.vertices[1]===h))return b[e][f].harbor.trading===Resource.ANY?3:2;return 4}function D(b,c,d){for(var e={player:-1,item:Resource.Dust,num:0},f={player:-1,item:Resource.Dust,num:0},g=0;g<a.NUM_PLAYERS;g++)for(var h=0;h<Resource.SIZE;h++){var i=c.players[g].resources[h]-b.players[g].resources[h];if(0>i){if(-1!==f.player||f.item!==Resource.Dust)throw new Error("Cannot steal multiple players!");f={player:g,item:h,num:-i}}if(i>0){if(-1!==e.player||e.item!==Resource.Dust)throw new Error("Cannot have multiple stealings!");e={player:g,item:h,num:i}}}if(e.player!==d)throw new Error("Only current player can steal from others!");if(e.player===f.player)throw new Error("Cannot steal from self!");if(e.item!==f.item)throw new Error("Error! Stealing item is not matching stolen item!");if(e.item===Resource.Dust)throw new Error("Must designate what to steal!");if(e.num!==f.num)throw new Error("Error! Stealing number is not matching stolen number! "+e.num+" : "+f.num);if(1!==e.num)throw new Error("Must steal one resource at a time!");B(c.players[e.player].resources),B(c.players[f.player].resources)}function E(a,b,c){if(!a.diceRolled)throw new Error("Need to roll dices first");var d={item:Resource.Dust,num:0},e={item:Resource.Dust,num:0};B(b.players[c].resources);for(var f=0;f<Resource.SIZE;f++){if(b.players[c].resources[f]<a.players[c].resources[f]){if(d.item!==Resource.Dust)throw new Error("Need to use same resources for trading");d={item:f,num:a.players[c].resources[f]-b.players[c].resources[f]}}if(b.players[c].resources[f]>a.players[c].resources[f]){if(e.item!==Resource.Dust)throw new Error("One resource per trade");e={item:f,num:b.players[c].resources[f]-a.players[c].resources[f]}}}if(d.item===Resource.Dust||e.item===Resource.Dust)throw new Error("Missing trading item!");if(d.item===e.item)throw new Error("Cannot trade the same resources");if(e.num*C(b.board,e.item,c)!==d.num)throw new Error("Wrong trading ratio")}function F(a){var b=a.stateBeforeMove?a.stateBeforeMove:n(),c=a.move.stateAfterMove,d=-1!==b.eventIdx?b.eventIdx:a.turnIndexBeforeMove;a.move.turnIndexAfterMove,a.move.stateAfterMove.delta;if(c.moveType!==MoveType.INIT&&c.moveType!==MoveType.WIN){if(c.moveType>=MoveType.SIZE||null===X[c.moveType])throw new Error("Unknown move!");X[c.moveType](b,c,d)}}function G(b){for(var c=[],d=0;d<a.NUM_PLAYERS;d++)c[d]=0;for(var d=0;d<a.NUM_PLAYERS;d++){var e=b.players[d];c[d]+=1*e.construction[Construction.Settlement],c[d]+=2*e.construction[Construction.City],c[d]+=e.devCards[DevCard.VictoryPoint]}return-1!==b.awards.longestRoad.player&&(c[b.awards.longestRoad.player]+=2),-1!==b.awards.largestArmy.player&&(c[b.awards.largestArmy.player]+=2),c}function H(a){var b=angular.copy(a.currState);return b.delta=null,b}function I(a,b){var c=angular.copy(a.currState);return c.eventIdx=-1,c.building=null,c.delta=b,c}function J(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");var c=H(a);if(0!==c.eventIdx)throw new Error("Initial construction not finished!");if(c.moveType!==MoveType.INIT_BUILD)throw new Error("Invalid operation!");var d=I(a,c);return d.moveType=MoveType.INIT,{endMatchScores:null,turnIndexAfterMove:0,stateAfterMove:d}}function K(c,d){if(c.playerIdx!==d)throw new Error("Not your turn to play!");if(c.currState.diceRolled)throw new Error("Dices already rolled!");var f=H(c),g=I(c,f);g.moveType=MoveType.ROLL_DICE,g.diceRolled=!0,g.dices[0]=b(1,7),g.dices[1]=b(1,7);var h=g.dices[0]+g.dices[1];if(7!==h){for(var i=d;i<d+a.NUM_PLAYERS;i++)for(var j=i%a.NUM_PLAYERS,k=0;k<a.ROWS;k++)for(var l=0;l<a.COLS;l++)if(!e(k,l)&&f.board[k][l].label!==Resource.Dust&&!f.board[k][l].hasRobber&&f.board[k][l].rollNum===h)for(var m=0;m<f.board[k][l].vertexOwner.length;m++)if(f.board[k][l].vertexOwner[m]===j){var n=f.bank.resources[f.board[k][l].label],o=0;switch(f.board[k][l].vertices[m]){case Construction.City:o=2>n?n:2;break;case Construction.Settlement:o=1>n?n:1}g.players[j].resources[f.board[k][l].label]+=o,g.bank.resources[f.board[k][l].label]-=o}}else g.eventIdx=d;return{endMatchScores:null,turnIndexAfterMove:d,stateAfterMove:g}}function L(b,c){var d=b,e=d.playerIdx;if(e!==b.currState.eventIdx)throw new Error("It's not your turn to build!");var f=H(b),g=I(b,f);switch(g.moveType=MoveType.INIT_BUILD,g.building={consType:null,hexRow:d.hexRow,hexCol:d.hexCol,vertexOrEdge:d.vertexOrEdge,init:!0},d.consType){case Construction.Road:if(b.currState.players[e].construction[Construction.Road]>=2)throw new Error("Can only build 2 roads during initialization!");if(-1!==g.board[d.hexRow][d.hexCol].edges[d.vertexOrEdge])throw new Error("Road already built on this place!");g.building.consType=Construction.Road,g.board=getNextStateToBuild(g.board,d),g.players[e].construction[Construction.Road]++;break;case Construction.Settlement:if(b.currState.players[e].construction[Construction.Settlement]>=2)throw new Error("Can only build 2 settlements during initialization!");g.building.consType=Construction.Settlement,g.board=getNextStateToBuild(g.board,d),g.players[e].construction[Construction.Settlement]++;break;default:throw new Error("Can only build road/settlement during initialization!")}var h=g.players[e];if(1===h.construction[Construction.Settlement]&&0===h.construction[Construction.Road])g.eventIdx=f.eventIdx;else if(1===h.construction[Construction.Settlement]&&1===h.construction[Construction.Road])e===a.NUM_PLAYERS-1?g.eventIdx=f.eventIdx:g.eventIdx=f.eventIdx+1;else if(2===h.construction[Construction.Settlement]&&1===h.construction[Construction.Road]){var i=getHexesAdjacentToVertex(d.hexRow,d.hexCol,d.vertexOrEdge),j=g.board[d.hexRow][d.hexCol].label;j<Resource.SIZE&&(g.players[e].resources[j]++,g.bank.resources[j]--);for(var k=0;k<i.length;k++){var l=g.board[i[k][0]][i[k][1]].label;l<Resource.SIZE&&(g.players[e].resources[l]++,g.bank.resources[l]--)}g.eventIdx=f.eventIdx}else 2===h.construction[Construction.Settlement]&&2===h.construction[Construction.Road]?0===e?g.eventIdx=f.eventIdx:g.eventIdx=f.eventIdx-1:g.eventIdx=f.eventIdx;return g.players[e].points=G(g)[e],g.players[e].points-=g.players[e].devCards[DevCard.VictoryPoint],{endMatchScores:null,turnIndexAfterMove:c,stateAfterMove:g}}function M(a,b){var c=a,d=c.playerIdx;if(d!==b)throw new Error("It's not your turn!");if(!a.currState.diceRolled)throw new Error("Must roll the dices before construction!");var e=H(a),f=I(a,e);f.players[d].construction[c.consType]++,c.consType===Construction.City&&f.players[d].construction[Construction.Settlement]--,f.building={consType:c.consType,hexRow:c.hexRow,hexCol:c.hexCol,vertexOrEdge:c.vertexOrEdge,init:!1};var g=null;switch(c.consType){case Construction.Road:if(f.moveType=MoveType.BUILD_ROAD,-1!==a.currState.board[c.hexRow][c.hexCol].edges[c.vertexOrEdge])throw new Error("Invalid building instruction!");if(!canAffordConstruction(f.players[d],Construction.Road))throw new Error("Insufficient resources to build a road!");if(f.players[d].construction[Construction.Road]>=15)throw new Error("No more roads to build!");f.board=getNextStateToBuild(f.board,c),f.board[c.hexRow][c.hexCol].edges[c.vertexOrEdge]=d,f.players[d].resources[Resource.Brick]--,f.players[d].resources[Resource.Lumber]--,f.bank.resources[Resource.Brick]++,f.bank.resources[Resource.Lumber]++;break;case Construction.Settlement:if(f.moveType=MoveType.BUILD_SETTLEMENT,-1!==a.currState.board[c.hexRow][c.hexCol].vertexOwner[c.vertexOrEdge])throw new Error("Invalid building instruction!");if(g=f.players[d],!canAffordConstruction(f.players[d],Construction.Settlement))throw new Error("Insufficient resources to build a settlement!");f.board=getNextStateToBuild(f.board,c),f.players[d].resources[Resource.Brick]--,f.players[d].resources[Resource.Lumber]--,f.players[d].resources[Resource.Wool]--,f.players[d].resources[Resource.Grain]--,f.bank.resources[Resource.Brick]++,f.bank.resources[Resource.Lumber]++,f.bank.resources[Resource.Wool]++,f.bank.resources[Resource.Grain]++;break;case Construction.City:if(f.moveType=MoveType.BUILD_CITY,a.currState.board[c.hexRow][c.hexCol].vertexOwner[c.vertexOrEdge]!==d||a.currState.board[c.hexRow][c.hexCol].vertices[c.vertexOrEdge]!==Construction.Settlement)throw new Error("Invalid building instruction!");if(g=f.players[d],!canAffordConstruction(f.players[d],Construction.City))throw new Error("Insufficient resources to upgrade a settlement to a city!");f.board=getNextStateToBuild(f.board,c),f.players[d].resources[Resource.Ore]-=3,f.players[d].resources[Resource.Grain]-=2,f.bank.resources[Resource.Ore]+=3,f.bank.resources[Resource.Grain]+=2;break;case Construction.DevCard:if(a.currState.bank.devCardsOrder.length<=0)throw new Error("No development cards in bank right now!");if(g=f.players[d],!canAffordConstruction(f.players[d],Construction.DevCard))throw new Error("Insufficient resources to build a development card!");f.moveType=MoveType.BUILD_DEVCARD,f.players[d].devCards[a.currState.bank.devCardsOrder[0]]++,f.bank.devCards[a.currState.bank.devCardsOrder[0]]--,f.bank.devCardsOrder.splice(0,1),f.players[d].resources[Resource.Ore]--,f.players[d].resources[Resource.Wool]--,f.players[d].resources[Resource.Grain]--,f.bank.resources[Resource.Ore]++,f.bank.resources[Resource.Wool]++,f.bank.resources[Resource.Grain]++;break;default:throw new Error("Invalid command!")}return f.players[d].points=G(f)[d],f.players[d].points-=f.players[d].devCards[DevCard.VictoryPoint],{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:f}}function N(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");if(a.currState.devCardsPlayed)throw new Error("Already played development card!");if(a.currState.players[a.playerIdx].devCards[DevCard.Knight]<=0)throw new Error("Doesn't have knight card on hand!");var c=H(a),d=I(a,c);return d.devCardsPlayed=!0,d.moveType=MoveType.KNIGHT,d.players[a.playerIdx].knightsPlayed++,d.players[a.playerIdx].devCards[DevCard.Knight]--,d.players[a.playerIdx].knightsPlayed>c.awards.largestArmy.num&&(d.awards.largestArmy={player:a.playerIdx,num:d.players[a.playerIdx].knightsPlayed}),d.players[a.playerIdx].points=G(d)[a.playerIdx],d.players[a.playerIdx].points-=d.players[a.playerIdx].devCards[DevCard.VictoryPoint],{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:d}}function O(b,c){if(b.playerIdx!==c)throw new Error("Not your turn to play!");if(b.currState.devCardsPlayed)throw new Error("Already played development card in this turn!");if(b.currState.players[c].devCards[DevCard.Monopoly]<=0)throw new Error("No Monopoly card on hand!");var d=b,e=H(b),f=I(b,e);f.moveType=MoveType.MONOPOLY,f.devCardsPlayed=!0,f.players[c].devCards[DevCard.Monopoly]--;for(var g=0,h=0;h<a.NUM_PLAYERS;h++)if(h!==c){var i=f.players[h].resources[d.target];g+=i>0?i:0,f.players[h].resources[d.target]=0}return f.players[c].resources[d.target]+=g,{endMatchScores:null,turnIndexAfterMove:c,stateAfterMove:f}}function P(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");if(a.currState.devCardsPlayed)throw new Error("Already played development cards in this turn!");if(a.currState.players[b].devCards[DevCard.RoadBuilding]<=0)throw new Error("No Road Building cards on hand!");var c=a,d=H(a),e=I(a,d);if(e.moveType=MoveType.ROAD_BUILDING,e.devCardsPlayed=!0,e.players[b].devCards[DevCard.RoadBuilding]--,!u(e.players[b],e.board,c.road1.hexRow,c.road1.hexCol,c.road1.vertexOrEdge,!0)&&!u(e.players[b],e.board,c.road2.hexRow,c.road2.hexCol,c.road2.vertexOrEdge,!0))throw new Error("Cannot legally build roads!");var f=u(e.players[b],e.board,c.road1.hexRow,c.road1.hexCol,c.road1.vertexOrEdge,!0),g=f?getNextStateToBuild(e.board,c.road1):getNextStateToBuild(e.board,c.road2);if(f){if(!u(e.players[b],g,c.road2.hexRow,c.road2.hexCol,c.road2.vertexOrEdge,!0))throw new Error("Cannot build road legally!");e.board=getNextStateToBuild(g,c.road2)}else{if(!u(e.players[b],g,c.road1.hexRow,c.road1.hexCol,c.road1.vertexOrEdge,!0))throw new Error("Cannot build road legally!");e.board=getNextStateToBuild(g,c.road1)}return e.players[b].construction[Construction.Road]+=2,e.players[b].construction[Construction.Road]>d.awards.longestRoad.length&&(e.awards.longestRoad={player:b,length:e.players[b].construction[Construction.Road]}),e.players[b].points=G(e)[b],e.players[b].points-=e.players[b].devCards[DevCard.VictoryPoint],{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:e}}function Q(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");if(a.currState.devCardsPlayed)throw new Error("Already played development card in this turn!");if(a.currState.players[b].devCards[DevCard.YearOfPlenty]<=0)throw new Error("No Year of Plenty card on hand!");var c=a;if(2!==c.target.reduce(function(a,b){return a+b}))throw new Error("Must choose two resources (can be of same type)");angular.forEach(c.target,function(a){if(0>a)throw new Error("Cannot dump resources!")});var d=H(a),e=I(a,d);e.moveType=MoveType.YEAR_OF_PLENTY,e.players[b].devCards[DevCard.YearOfPlenty]--;for(var f=0;f<Resource.SIZE;f++)if(e.players[b].resources[f]+=c.target[f],e.bank.resources[f]-=c.target[f],e.bank.resources[f]<0)throw new Error("Insufficient resources in bank: "+Resource[f]);return{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:e}}function R(b,c){var d=b,e=H(b),f=I(b,e);f.moveType=MoveType.ROBBER_EVENT;for(var g=e.eventIdx,h=0,i=0;i<Resource.SIZE;i++)h+=e.players[g].resources[i];if(h>7)for(var i=0;i<Resource.SIZE;i++){if(d.tossed[i]<0)throw new Error("Cannot dump negative resources");if(f.players[g].resources[i]-=d.tossed[i],f.players[g].resources[i]<0)throw new Error("Insufficient resource: "+Resource[i])}return f.eventIdx=(e.eventIdx+1)%a.NUM_PLAYERS,{endMatchScores:null,turnIndexAfterMove:c,stateAfterMove:f}}function S(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");var c=a;if(e(c.row,c.col))throw new Error("Cannot move robber to sea!");var d=H(a),f=I(a,d);f.moveType=MoveType.ROBBER_MOVE;var g=d.robber;if(g.row===c.row&&g.col===c.col)throw new Error("Cannot move robber to same place!");return f.board[g.row][g.col].hasRobber=!1,f.board[c.row][c.col].hasRobber=!0,f.robber.row=c.row,f.robber.col=c.col,{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:f}}function T(a,c){if(a.playerIdx!==c)throw new Error("Not your turn to play!");var e=a;if(e.stealingIdx!==c||e.stealingIdx===e.stolenIdx)throw new Error("Invalid robbing action!");var f=H(a),g=I(a,f);g.moveType=MoveType.ROB_PLAYER;for(var h=[],i=0;i<Resource.SIZE;i++)if(f.players[e.stolenIdx].resources[i]>0)for(var j=0;j<f.players[e.stolenIdx].resources[i];j++)h.push(i);h=d(h);var k=b(0,h.length);return g.players[e.stealingIdx].resources[h[k]]++,g.players[e.stolenIdx].resources[h[k]]--,{endMatchScores:null,turnIndexAfterMove:c,stateAfterMove:g}}function U(a,b){if(a.playerIdx!==b)throw new Error("Not your turn to play!");var c=a,d=H(a),e=I(a,d);if(e.moveType=MoveType.TRANSACTION_WITH_BANK,!d.diceRolled)throw new Error("Need to roll dices first!");if(e.players[b].resources[c.sellingItem]-=c.sellingNum,e.players[b].resources[c.buyingItem]+=c.buyingNum,e.bank.resources[c.sellingItem]+=c.sellingNum,e.bank.resources[c.buyingItem]-=c.buyingNum,e.players[b].resources[c.sellingItem]<0)throw new Error("Player has insufficient resources to trade!");if(e.bank.resources[c.buyingItem]<0)throw new Error("Bank has insufficient resources to trade!");return{endMatchScores:null,turnIndexAfterMove:b,stateAfterMove:e}}function V(b,c){if(b.playerIdx!==c)throw new Error("Not your turn to play!");if(!b.currState.diceRolled)throw new Error("Must roll the dices!");for(var d=H(b),e=c;e<c+a.NUM_PLAYERS;e++){var f=e%a.NUM_PLAYERS;d.awards.longestRoad.player===f&&W(d.players[f],d.board)<d.awards.longestRoad.length&&(W(d.players[f],d.board)>=5?d.awards.longestRoad={player:f,length:W(d.players[f],d.board)}:d.awards.longestRoad={player:-1,length:4})}for(var e=c;e<c+a.NUM_PLAYERS;e++){var f=e%a.NUM_PLAYERS;W(d.players[f],d.board)>d.awards.longestRoad.length&&(d.awards.longestRoad={player:f,length:W(d.players[f],d.board)})}for(var g=G(d),h=!1,e=0;e<a.NUM_PLAYERS;e++)if(g[e]>=10){h=!0;break}var i=I(b,d);return i.diceRolled=!1,i.devCardsPlayed=!1,i.moveType=h?MoveType.WIN:MoveType.INIT,{endMatchScores:h?g:null,turnIndexAfterMove:(c+1)%a.NUM_PLAYERS,stateAfterMove:i}}function W(b,c){for(var d=0,e=0;e<a.ROWS;e++)for(var f=0;f<a.COLS;f++)for(var g=0;6>g;g+=2){var h=findRoadSubLength(b,c,e,f,g,[]);h>d&&(d=h)}return d}a.ROWS=7,a.COLS=7,a.NUM_PLAYERS=4,a.test_func=c,a.isSea=e,a.getInitialBoard=h,a.getInitialState=n;var X=[null,o,p,r,s,t,x,y,y,y,y,null,z,A,D,E];a.canBuildRoadLegally=u,a.canBuildSettlementLegally=v,a.canUpgradeSettlement=w,a.checkMoveOk=F,a.onGameStart=J,a.onRollDice=K,a.onInitBuilding=L,a.onBuilding=M,a.onKnight=N,a.onMonopoly=O,a.onRoadBuilding=P,a.onYearOfPlenty=Q,a.onRobberEvent=R,a.onRobberMove=S,a.onRobPlayer=T,a.onTradingWithBank=U,a.onEndTurn=V,a.getLongestRoad=W}(gameLogic||(gameLogic={}));var MouseTarget;!function(a){a[a.NONE=0]="NONE",a[a.HEX=1]="HEX",a[a.VERTEX=2]="VERTEX",a[a.EDGE=3]="EDGE"}(MouseTarget||(MouseTarget={}));var game;!function(a){function b(b,c){a.height=c,a.width=b}function c(){resizeGameAreaService.setWidthToHeight(1.33333),translate.setTranslations(d()),translate.setLanguage("en"),log.log("Translation of 'Pioneers' is "+translate("RULES_OF_PIONEERS")),resizeGameAreaService.setWidthToHeight(1.33333),moveService.setGame({minNumberOfPlayers:4,maxNumberOfPlayers:4,checkMoveOk:gameLogic.checkMoveOk,updateUI:i}),document.addEventListener("animationend",e,!1),document.addEventListener("webkitAnimationEnd",e,!1),document.addEventListener("oanimationend",e,!1);var b=window;b.HTMLInspector&&setInterval(function(){b.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3);for(var c=0;c<gameLogic.ROWS;c++){a.coordinates[c]=[];for(var f=0;f<gameLogic.COLS;f++){var g=n(c,f);a.coordinates[c][f]=g.slice(2,6).concat(g.slice(0,2))}}a.resourcesPicked=getZerosArray(Resource.SIZE)}function d(){return{RULES_OF_PIONEERS:{en:"Rules of Pioneers"},RULES_SLIDE1:{en:"You and your opponent take turns to building settlements and cities on the island.  The first to reach 10 points wins!"},RULES_SLIDE2:{en:"Initial building phase starts with a placing a settlement on a vertex and an adjacent road on an edge, once the last player finishes, it repeats in the opposite direction, gaining resources adjacent to the second settlement.  After the first player's finishes their second settlement and road, the game starts.  "},RULES_SLIDE3:{en:"Settlements cannot be on adjacent vertices, they must be at least one vertex apart.  You can only build settlements if you have a road leading to the vertex (aside from the first two settlements).  When the dice are rolled, the number on the hex will yield that resource to players having a settlement or city adjacent to it.  Having settlements on hexes with numbers closer to 7 are more likely to be rolled.  However, if a 7 is rolled, no resources will be handed out, but instead players must drop cards if they have too many.  In addition, the player who rolled the dice gets to move the robber to a new hex, allowing that person to steal a resource card from another player.  Settlements can be upgraded to cities to yield double resources when a number is rolled.  "},RULES_SLIDE4:{en:"The cost of a road is: 1 wood and 1 brick.  The cost of a settlement is: 1 wood, 1 brick, 1 sheep, and 1 wheat.  The cost of upgrading to a city is: 3 wheat and 2 ore.\rThe cost of a development card is: 1 sheep, 1 wheat, and 1 ore."},CLOSE:{en:"Close"}}}function e(){$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0,f()})}function f(){a.isComputerTurn&&(a.isComputerTurn=!1,moveService.makeMove(aiService.findComputerMove(a.move)))}function g(){return!0}function h(){switch(a.state.moveType){case MoveType.INIT:a.alertStyle="success",a.alertMsg="It is now player 1's turn";break;case MoveType.INIT_BUILD:a.alertStyle="success",a.state.eventIdx===a.myIndex?2===a.state.players[a.myIndex].construction[Construction.Settlement]&&2===a.state.players[a.myIndex].construction[Construction.Road]?a.alertMsg="Initial buildings done, time to start the game!":a.alertMsg="Please place your initial buildings and roads...":a.state.players[a.state.eventIdx].construction[Construction.Settlement]>a.state.players[a.state.eventIdx].construction[Construction.Road]?a.alertMsg="Player "+(a.state.eventIdx+1)+" placed a settlement, but now needs a road...":a.alertMsg="Player "+(a.state.eventIdx+1)+" placing initial buildings and roads...";
break;case MoveType.ROLL_DICE:a.alertStyle="success",a.alertMsg="Player 1 rolled a "+a.state.dices.reduce(function(a,b){return a+b});break;case MoveType.BUILD_ROAD:a.alertStyle="success",a.alertMsg="Player 1 built a road!";break;case MoveType.BUILD_SETTLEMENT:a.alertStyle="success",a.alertMsg="Player 1 built a settlement!";break;case MoveType.BUILD_CITY:a.alertStyle="success",a.alertMsg="Player 1 upgraded a settlement to a city!";break;case MoveType.BUILD_DEVCARD:a.alertStyle="success",a.alertMsg="Player 1 bought a development card!";break;case MoveType.KNIGHT:a.alertStyle="success",a.alertMsg="Player 1 played a knight!";break;case MoveType.MONOPOLY:a.alertStyle="success",a.alertMsg="Player 1 played a monopoly development card!";break;case MoveType.YEAR_OF_PLENTY:a.alertStyle="success",a.alertMsg="Player 1 played a year of plenty card!";break;case MoveType.TRADE:break;case MoveType.ROBBER_EVENT:break;case MoveType.ROBBER_MOVE:break;case MoveType.ROB_PLAYER:break;case MoveType.TRANSACTION_WITH_BANK:a.alertMsg="Player 1 traded with the bank!";break;case MoveType.WIN:break;default:a.alertStyle="danger",a.alertMsg="Unknown Move!"}}function i(b){switch(log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move,a.state=a.move.stateAfterMove,a.state||(a.state=gameLogic.getInitialState()),a.myIndex=b.yourPlayerIndex,a.canMakeMove=g(),h(),W(),a.state.moveType){case MoveType.INIT_BUILD:if(0===a.state.eventIdx&&fb===!0){for(var c=!0,d=0;d<gameLogic.NUM_PLAYERS;d++)if(2!==a.state.players[d].construction[Construction.Road]||2!==a.state.players[d].construction[Construction.Settlement]){c=!1;break}if(c){a.showInfoModal=!0,a.infoModalHeader="Start Game",a.infoModalMsg="Everyone is ready, it's time to start the game!",a.canInfoModalTurnOff=!1,a.initialBuilding=!1;var e={moveType:MoveType.INIT,playerIdx:a.myIndex,currState:a.state};a.onOkClicked=function(){try{var b=gameLogic.onGameStart(e,0);moveService.makeMove(b),W()}catch(c){a.alertStyle="danger",a.alertMsg=c.message}}}}a.state.eventIdx===gameLogic.NUM_PLAYERS-1&&(fb=!0);break;case MoveType.ROLL_DICE:a.state.dices[0]+a.state.dices[1]===7&&a.move.turnIndexAfterMove===a.myIndex&&wa();break;case MoveType.ROBBER_EVENT:a.state.eventIdx===a.move.turnIndexAfterMove?a.myIndex===a.move.turnIndexAfterMove&&(a.alertStyle="warning",a.alertMsg="Moving robber...",ya()):a.state.eventIdx===a.myIndex&&wa();break;case MoveType.ROBBER_MOVE:a.myIndex===a.move.turnIndexAfterMove&&Ba();break;case MoveType.KNIGHT:a.myIndex===a.move.turnIndexAfterMove&&(a.alertStyle="warning",a.alertMsg="Knight!  Moving robber...",ya())}a.isComputerTurn&&(a.canMakeMove=!1,a.state.delta||f())}function j(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}function k(b){a.canInfoModalTurnOff&&b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.onCloseModal())}function l(a,b){return Math.sqrt(3)*b/2}function m(a,b,c){for(var d=[],e=0;e<2*Math.PI;e+=Math.PI/3){var f=a+c*Math.sin(e),g=b+c*Math.cos(e);d.push(f+","+g)}return d}function n(a,b){var c=l(a,45),d=105+c*b*2-(a%2===1?c:0),e=100+c*a*Math.sqrt(3);return m(d,e,45)}function o(a,b){var c=l(a,45),d=105+c*b*2-(a%2===1?c:0),e=100+c*a*Math.sqrt(3);return[d.toString(),e.toString()]}function p(a,b){return(0!==a&&6!==a||!(0===b||b>4))&&(1!==a&&5!==a||0!==b&&6!==b)&&(2!==a&&4!==a||6!==b)?!0:!1}function q(a){a.target===a.currentTarget&&(a.preventDefault(),a.stopPropagation(),this.isHexModalShown=!1)}function r(b,c){return a.coordinates[b][c].join(" ")}function s(b,c,d){return a.coordinates[b][c][d].split(",")}function t(b,c,d){var e=0===d?5:d-1;return[a.coordinates[b][c][e].split(","),a.coordinates[b][c][d].split(",")]}function u(b,c,d){return-1!==a.state.board[b][c].vertices[d]||a.playingDevRoadBuild?!1:Sa===MouseTarget.NONE||Sa===MouseTarget.EDGE?!1:Ta!==b||Ua!==c?!1:-1!==_a&&-1!==ab?!1:Sa===MouseTarget.VERTEX?Va===d:a.initialBuilding&&a.state.players[a.myIndex].construction[Construction.Settlement]>a.state.players[a.myIndex].construction[Construction.Road]?!1:gameLogic.canBuildSettlementLegally(a.state.players[a.myIndex],a.state.board,b,c,d,a.initialBuilding)?!0:!1}function v(a,b,c){return Sa===MouseTarget.NONE||Sa===MouseTarget.EDGE?"":Ta!==a||Ua!==b?"":Sa===MouseTarget.VERTEX?Va===c?"emphasize-vertex":"":"mouse-to-display-vertex"}function w(b,c,d){return-1!==a.state.board[b][c].edges[d]?!1:Sa===MouseTarget.NONE||Sa===MouseTarget.VERTEX?!1:Ta!==b||Ua!==c?!1:-1!==_a&&-1!==ab?!1:Sa===MouseTarget.EDGE?Va===d:a.initialBuilding&&a.state.players[a.myIndex].construction[Construction.Settlement]===a.state.players[a.myIndex].construction[Construction.Road]?!1:gameLogic.canBuildRoadLegally(a.state.players[a.myIndex],a.state.board,b,c,d,!0)?!0:!1}function x(a,b,c){return Sa===MouseTarget.NONE||Sa===MouseTarget.VERTEX?"":Ta!==a||Ua!==b?"":Sa===MouseTarget.EDGE?Va===c?"emphasize-edge":"":"mouse-to-display-edge"}function y(b,c,d){if(a.state.board[b][c].edges[d]>=0)return!0;for(var e=0;e<a.devRoads.length;e++)if(a.devRoads[e].hexRow===b&&a.devRoads[e].hexCol===c&&a.devRoads[e].vertexOrEdge===d)return!0;return!1}function z(b,c,d){return a.state.board[b][c].vertices[d]===Construction.Settlement}function A(b,c,d){return a.state.board[b][c].vertices[d]===Construction.City}function B(b){return b>=0?a.playerColor[b]:"black"}function C(b,c,d){return B(a.state.board[b][c].edges[d]>=0?a.state.board[b][c].edges[d]:a.devRoads.length>0&&y(b,c,d)?a.myIndex:-1)}function D(b,c,d){var e=a.coordinates[b][c][d].split(","),f=parseFloat(e[0]),g=parseFloat(e[1]),h="M"+f+","+(g-10);return h+" l-10,10 v10 h20 v-10 l-10,-10"}function E(b,c,d){var e=a.coordinates[b][c][d].split(","),f=parseFloat(e[0]),g=parseFloat(e[1]),h="M"+f+","+(g-10);return h+" l-10,10 v10 h30 v-10 h-10 l-10,-10"}function F(b,c){var d=Number(o(b,c)[0]),e=Number(o(b,c)[1]),f="M"+d+","+e,g=a.coordinates[b][c][a.state.board[b][c].harbor.vertices[0]].split(","),h=parseFloat(g[0]),i=parseFloat(g[1]);g=a.coordinates[b][c][a.state.board[b][c].harbor.vertices[1]].split(",");var j=parseFloat(g[0]),k=parseFloat(g[1]),l=h-d,m=i-e,n=j-h,p=k-i,q=d-j,r=e-k;return f+" l"+l+","+m+" l"+n+","+p+" l"+q+","+r}function G(b,c){return a.state.board[b][c].harbor.trading===Resource.ANY?"white":"url(#r"+a.state.board[b][c].harbor.trading+")"}function H(b,c){return null===a.state.board[b][c].harbor?!1:a.state.board[b][c].harbor.trading===Resource.ANY}function I(b,c){return null!==a.state.board[b][c].harbor}function J(b,c){return a.state.board[b][c].rollNum>0||a.state.robber.row===b&&a.state.robber.col===c}function K(b,c){return a.state.board[b][c].hasRobber||a.state.board[b][c].rollNum>=6&&a.state.board[b][c].rollNum<=8?"red":"black"}function L(){return a.myIndex>=0?5-a.state.players[a.myIndex].construction[Construction.Settlement]:0}function M(){return a.myIndex>=0?4-a.state.players[a.myIndex].construction[Construction.City]:0}function N(){return a.myIndex>=0?15-a.state.players[a.myIndex].construction[Construction.Road]:0}function O(b,c){return b===_a&&c===ab?B(a.myIndex):"url(#r"+a.state.board[b][c].label+")"}function P(a,b){Sa=MouseTarget.HEX,Ta=a,Ua=b}function Q(a,b,c){Sa=MouseTarget.EDGE,Ta=a,Ua=b,Va=c}function R(b,c,d){if(a.playingDevRoadBuild){var e={moveType:MoveType.BUILD_ROAD,playerIdx:a.myIndex,currState:a.state,consType:Construction.Road,hexRow:b,hexCol:c,vertexOrEdge:d};return a.devRoads.push(e),void(2===a.devRoads.length&&(a.showInfoModal=!0,a.infoModalHeader="Playing Development Cards",a.infoModalMsg="Are you sure you want to build both roads?",a.onOkClicked=qa))}Wa=Construction.Road,Xa=b,Ya=c,Za=d,a.showInfoModal=!0,a.onOkClicked=U,a.infoModalHeader="Building",a.infoModalMsg="Are you sure you want to build a road?"}function S(a,b,c){Sa=MouseTarget.VERTEX,Ta=a,Ua=b,Va=c}function T(b,c,d){-1===a.state.board[b][c].vertices[d]?(Wa=Construction.Settlement,Xa=b,Ya=c,Za=d,a.showInfoModal=!0,a.onOkClicked=U,a.infoModalHeader="Building",a.infoModalMsg="Are you sure you want to build a settlement?"):a.state.board[b][c].vertices[d]===Construction.Settlement&&a.state.board[b][c].vertexOwner[d]===a.myIndex&&(Wa=Construction.City,Xa=b,Ya=c,Za=d,a.showInfoModal=!0,a.onOkClicked=U,a.infoModalHeader="Building",a.infoModalMsg="Are you sure you want to upgrade this settlement to a city?")}function U(){if(a.showInfoModal=!1,a.onOkClicked=null,a.canMakeMove){var b={moveType:a.state.moveType,playerIdx:a.myIndex,currState:angular.copy(a.state),consType:Wa,hexRow:Xa,hexCol:Ya,vertexOrEdge:Za};try{var c=a.state.moveType===MoveType.INIT_BUILD?gameLogic.onInitBuilding(b,a.move.turnIndexAfterMove):gameLogic.onBuilding(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}catch(d){a.alertStyle="danger",a.alertMsg=d.message}}}function V(){Sa=MouseTarget.NONE}function W(){a.showInfoModal=!1,a.infoModalHeader="",a.infoModalMsg="",a.onOkClicked=null,a.onCloseModal=W,a.canInfoModalTurnOff=!0,$a=null,a.showResourcePicker=!1,Ra=-1,a.resourcesPicked=getZerosArray(Resource.SIZE),a.showResourcePickerMultiple=!1,a.onClickHex=P,_a=-1,ab=-1,a.showRobberPanel=!1,bb=-1,a.showTradingPanel=!1,cb=-1,a.tradingNum=0,db=-1,a.wantedNum=0,eb=!1}function X(b){return a.state.players[b].points}function Y(b){return a.state.players[b].knightsPlayed}function Z(b){return gameLogic.getLongestRoad(a.state.players[b],a.state.board)}function $(b){return b===a.myIndex?"my-info-border":"player-info-border"}function _(b,c){return a.state.board[b][c].hasRobber?-1===a.state.board[b][c].rollNum?"R":"R"+a.state.board[b][c].rollNum:""+a.state.board[b][c].rollNum}function aa(b,c){return!a.state||0>b?0:void 0===c||null===c?a.state.players[b].resources.reduce(function(a,b){return a+b}):a.state.players[b].resources[c]}function ba(b,c){return!a.state||0>b?0:void 0===c||null===c?a.state.players[b].devCards.reduce(function(a,b){return a+b}):a.state.players[b].devCards[c]}function ca(b){return!a.state||0>b?0:a.state.bank.resources[b]}function da(){return a.state.bank.devCardsOrder.length}function ea(){return a.state.moveType!==MoveType.INIT_BUILD&&!a.state.diceRolled}function fa(){return a.state.moveType!==MoveType.INIT_BUILD&&a.state.diceRolled}function ga(){var b={moveType:MoveType.INIT,playerIdx:a.myIndex,currState:angular.copy(a.state)},c=gameLogic.onEndTurn(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}function ha(){return a.state.dices.reduce(function(a,b){return a+b})}function ia(){var b={playerIdx:a.myIndex,moveType:MoveType.ROLL_DICE,currState:a.state};try{var c=gameLogic.onRollDice(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}catch(d){a.alertStyle="danger",a.alertMsg=d.message}}function ja(b){switch($a={moveType:null,playerIdx:a.myIndex,currState:angular.copy(a.state)},b){case DevCard.Knight:$a.moveType=MoveType.KNIGHT;break;case DevCard.Monopoly:$a.moveType=MoveType.MONOPOLY;break;case DevCard.RoadBuilding:$a.moveType=MoveType.ROAD_BUILDING;break;case DevCard.YearOfPlenty:$a.moveType=MoveType.YEAR_OF_PLENTY;break;default:return void($a=null)}a.showInfoModal=!0,a.onOkClicked=gb[b],a.infoModalHeader="Playing Development Cards",a.infoModalMsg="Are you sure you want to play "+DevCard[b]+"?"}function ka(){console.log($a);try{var b=gameLogic.onKnight($a,a.move.turnIndexAfterMove);moveService.makeMove(b)}catch(c){a.alertStyle="danger",a.alertMsg=c.message}finally{W()}}function la(){a.showResourcePicker=!0,a.infoModalHeader="Please pick a resource",a.infoModalMsg="",a.onOkClicked=oa}function ma(a){Ra=a}function na(a){return"resource-pic"+(Ra===a?" on-highlighted":"")}function oa(){var b={moveType:$a.moveType,playerIdx:$a.moveType,currState:a.state,target:Ra};try{var c=gameLogic.onMonopoly(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}catch(d){a.alertStyle="danger",a.alertMsg=d.message}finally{W()}}function pa(){a.alertStyle="warning",a.alertMsg="Please select two roads",sa(),a.playingDevRoadBuild=!0,W()}function qa(){var b={moveType:MoveType.ROAD_BUILDING,playerIdx:a.myIndex,currState:angular.copy(a.state),road1:a.devRoads[0],road2:a.devRoads[1]};try{var c=gameLogic.onRoadBuilding(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}catch(d){a.alertStyle="danger",a.alertMsg=d.message}finally{sa(),W()}}function ra(){a.alertStyle="success",a.alertMsg="Road Building Canceled",sa()}function sa(){a.devRoads=[],a.playingDevRoadBuild=!1}function ta(){a.showResourcePickerMultiple=!0,a.infoModalHeader="Please pick two resources",a.infoModalMsg="",a.onOkClicked=va}function ua(b,c){a.resourcesPicked[b]+=c?1:-1}function va(){var b={moveType:$a.moveType,playerIdx:$a.playerIdx,currState:a.state,target:a.resourcesPicked};try{var c=gameLogic.onYearOfPlenty(b,a.move.turnIndexAfterMove);moveService.makeMove(c)}catch(d){a.alertStyle="danger",a.alertMsg=d.message}finally{W()}}function wa(){a.state.players[a.myIndex].resources.reduce(function(a,b){return a+b})>7?(a.showResourcePickerMultiple=!0,a.infoModalHeader="Please dump half of resources on hand",a.infoModalMsg=""):(a.infoModalHeader="Robber Event!",a.infoModalMsg="Luckily you do not have to dump resources!"),a.onOkClicked=xa,a.showInfoModal=!0,a.canInfoModalTurnOff=!1}function xa(){var b={moveType:MoveType.ROBBER_EVENT,playerIdx:a.myIndex,currState:angular.copy(a.state),tossed:angular.copy(a.resourcesPicked)};try{var c=gameLogic.onRobberEvent(b,a.move.turnIndexAfterMove);moveService.makeMove(c),W()}catch(d){a.alertStyle="danger",a.alertMsg=d.message,wa()}}function ya(){a.myIndex===a.move.turnIndexAfterMove&&(a.onClickHex=za,a.onOkClicked=Aa,a.onCloseModal=function(){a.showInfoModal=!1},_a=a.state.robber.row,ab=a.state.robber.col)}function za(b,c){_a=b,ab=c,a.showInfoModal=!0,a.infoModalHeader="Move Robber",a.infoModalMsg="Are you sure you want to move the robber here?"}function Aa(){var b={moveType:MoveType.ROBBER_MOVE,playerIdx:a.myIndex,currState:a.state,row:_a,col:ab};try{var c=gameLogic.onRobberMove(b,a.move.turnIndexAfterMove);moveService.makeMove(c),W()}catch(d){a.alertStyle="danger",a.alertMsg=d.message,a.onCloseModal(),ya()}}function Ba(){for(var b=!0,c=a.state.robber.row,d=a.state.robber.col,e=0;e<a.state.board[c][d].vertexOwner.length;e++)if(-1!==a.state.board[c][d].vertexOwner[e]){var f=a.state.board[c][d].vertexOwner[e];if(a.state.players[f].resources.reduce(function(a,b){return a+b})>0){b=!1;break}}return b?(a.alertStyle="warning",a.alertMsg="No one can rob...",void W()):(a.showInfoModal=!0,a.canInfoModalTurnOff=!1,a.infoModalHeader="Select a player to rob",a.infoModalMsg="",a.onOkClicked=Da,void(a.showRobberPanel=!0))}function Ca(a){bb=a}function Da(){var b={moveType:MoveType.ROB_PLAYER,playerIdx:a.myIndex,currState:angular.copy(a.state),stealingIdx:a.myIndex,stolenIdx:bb};try{var c=gameLogic.onRobPlayer(b,a.move.turnIndexAfterMove);moveService.makeMove(c),W()}catch(d){a.alertStyle="danger",a.alertMsg=d.message,Ba()}}function Ea(b){for(var c=a.state.robber.row,d=a.state.robber.col,e=0;e<a.state.board[c][d].vertexOwner.length;e++)if(a.state.board[c][d].vertexOwner[e]===b)return b!==a.myIndex&&a.state.players[b].resources.reduce(function(a,b){return a+b})>0;return!1}function Fa(){return a.state.diceRolled&&a.myIndex===a.move.turnIndexAfterMove}function Ga(){eb=!0,Ha()}function Ha(){a.showInfoModal=!0,a.infoModalHeader="Trade",a.infoModalMsg="",a.onOkClicked=eb?Ia:null,a.showTradingPanel=!0}function Ia(){if(0>cb||cb>=Resource.SIZE||0>db||db>=Resource.SIZE)return a.alertStyle="danger",void(a.alertMsg="Must select items to trade!");if(a.tradingNum<=0||a.wantedNum<=0)return a.alertStyle="danger",void(a.alertMsg="Must identify number of items to trade!");var b={moveType:MoveType.TRANSACTION_WITH_BANK,playerIdx:a.myIndex,currState:angular.copy(a.state),sellingItem:cb,sellingNum:a.tradingNum,buyingItem:db,buyingNum:a.wantedNum};try{var c=gameLogic.onTradingWithBank(b,a.move.turnIndexAfterMove);moveService.makeMove(c),W()}catch(d){a.alertStyle="danger",a.alertMsg=d.message}}function Ja(a){cb=a}function Ka(a){db=a}function La(a,b){var c=db;return b&&(c=cb),"resource-pic"+(c>=0&&c===a?" on-highlighted":"")}function Ma(b){b?a.tradingNum++:a.tradingNum-=a.tradingNum<=0?0:1}function Na(b){b?a.wantedNum++:a.wantedNum-=a.wantedNum<=0?0:1}function Oa(){return a.state.diceRolled&&a.myIndex===a.move.turnIndexAfterMove}function Pa(){a.infoModalHeader="Trade",a.infoModalMsg="Are you sure you want to buy a development card?",a.showInfoModal=!0,a.onOkClicked=Qa}function Qa(){var b={moveType:MoveType.BUILD_DEVCARD,playerIdx:a.myIndex,currState:angular.copy(a.state),consType:Construction.DevCard,hexRow:-1,hexCol:-1,vertexOrEdge:-1};try{var c=gameLogic.onBuilding(b,a.move.turnIndexAfterMove);moveService.makeMove(c),W()}catch(d){a.alertStyle="danger",a.alertMsg=d.message}}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.state=null,a.isHelpModalShown=!1,a.isHexModalShown=!1,a.hexRow=3,a.hexCol=3,a.height=0,a.width=0,a.coordinates=[],a.playerColor=["#ED3B3B","#3889F2","#2AC761","#CC9D04"],a.myIndex=-2,a.alertStyle="success",a.alertMsg="Welcome to Pioneers Game!",a.showInfoModal=!1,a.infoModalHeader="",a.infoModalMsg="",a.onOkClicked=null,a.onCloseModal=W,a.canInfoModalTurnOff=!0,a.showResourcePicker=!1;var Ra=-1;a.devRoads=[],a.playingDevRoadBuild=!1,a.showResourcePickerMultiple=!1,a.resourcesPicked=[],a.onClickHex=P;var Sa=MouseTarget.NONE,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,$a=null,_a=-1,ab=-1;a.showRobberPanel=!1;var bb=-1;a.showTradingPanel=!1;var cb=-1;a.tradingNum=0;var db=-1;a.wantedNum=0;var eb=!1;a.initialBuilding=!0;var fb=!1;a.init_callback=b,a.init=c,a.clickedOnModal=j,a.clickedOnInfoModal=k,a.getCenter=o,a.showHex=p,a.onClickedHexModal=q,a.getHexVertices=r,a.getVertexCenter=s,a.getEdgeCoordinates=t,a.showVertex=u,a.getVertexClass=v,a.showEdge=w,a.getEdgeClass=x,a.showRoad=y,a.showSettlement=z,a.showCity=A,a.getColor=B,a.getRoadColor=C,a.getSettlement=D,a.getCity=E,a.getHarbor=F,a.getHarborFill=G,a.harborIsAny=H,a.showHarbor=I,a.showRollNum=J,a.getRollColor=K,a.getNumSettlementCanBuild=L,a.getNumCityCanBuild=M,a.getNumRoadCanBuild=N,a.getHexFill=O,a.onMouseOverHex=P,a.onMouseOverEdge=Q,a.onClickEdge=R,a.onMouseOverVertex=S,a.onClickVertex=T,a.onBuild=U,a.onMouseLeaveBoard=V,a.cleanupInfoModal=W,a.getPlayerPoints=X,a.getPlayerKnights=Y,a.getPlayerRoadLength=Z,a.getPlayerBorder=$,a.getRollNumText=_,a.getNumResources=aa,a.getNumDevCards=ba,a.getBankResources=ca,a.getBankDevCards=da,a.showDice=ea,a.showEndTurn=fa,a.endTurn=ga,a.getDicesNum=ha,a.onRollDice=ia;var gb=[ka,la,pa,ta];a.onDevCardClicked=ja,a.onOneTargetResourcePicked=ma,a.oneTargetResourceClass=na,a.onRoadBuildingDone=qa,a.onRoadBuildingCanceled=ra,a.onMultipleResourcesPicked=ua,a.onVictomSelected=Ca,a.possibleRobberVictom=Ea,a.showTradeButton=Fa,a.onTradeWithBankStart=Ga,a.onTradingSelected=Ja,a.onWantedSelected=Ka,a.tradingResourceClass=La,a.changeTradingNum=Ma,a.changeWantedNum=Na,a.showBuyDevCardButton=Oa,a.whenBuyDevCard=Pa}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,$rootScope.rows=getArray(gameLogic.ROWS),$rootScope.cols=getArray(gameLogic.COLS),$rootScope.vertices=getArray(6),$rootScope.edges=getArray(6),$rootScope.players=getArray(gameLogic.NUM_PLAYERS),$rootScope.resourceSize=getArray(Resource.SIZE),$rootScope.devCardsSize=getArray(DevCard.SIZE),game.init()});var Resource;!function(a){a[a.Brick=0]="Brick",a[a.Lumber=1]="Lumber",a[a.Wool=2]="Wool",a[a.Grain=3]="Grain",a[a.Ore=4]="Ore",a[a.SIZE=5]="SIZE",a[a.Dust=6]="Dust",a[a.Water=7]="Water",a[a.ANY=8]="ANY"}(Resource||(Resource={}));var DevCard;!function(a){a[a.Knight=0]="Knight",a[a.Monopoly=1]="Monopoly",a[a.RoadBuilding=2]="RoadBuilding",a[a.YearOfPlenty=3]="YearOfPlenty",a[a.VictoryPoint=4]="VictoryPoint",a[a.SIZE=5]="SIZE"}(DevCard||(DevCard={}));var Construction;!function(a){a[a.Road=0]="Road",a[a.Settlement=1]="Settlement",a[a.City=2]="City",a[a.DevCard=3]="DevCard",a[a.SIZE=4]="SIZE"}(Construction||(Construction={}));var MoveType;!function(a){a[a.INIT=0]="INIT",a[a.INIT_BUILD=1]="INIT_BUILD",a[a.ROLL_DICE=2]="ROLL_DICE",a[a.BUILD_ROAD=3]="BUILD_ROAD",a[a.BUILD_SETTLEMENT=4]="BUILD_SETTLEMENT",a[a.BUILD_CITY=5]="BUILD_CITY",a[a.BUILD_DEVCARD=6]="BUILD_DEVCARD",a[a.KNIGHT=7]="KNIGHT",a[a.MONOPOLY=8]="MONOPOLY",a[a.ROAD_BUILDING=9]="ROAD_BUILDING",a[a.YEAR_OF_PLENTY=10]="YEAR_OF_PLENTY",a[a.TRADE=11]="TRADE",a[a.ROBBER_EVENT=12]="ROBBER_EVENT",a[a.ROBBER_MOVE=13]="ROBBER_MOVE",a[a.ROB_PLAYER=14]="ROB_PLAYER",a[a.TRANSACTION_WITH_BANK=15]="TRANSACTION_WITH_BANK",a[a.WIN=16]="WIN",a[a.SIZE=17]="SIZE"}(MoveType||(MoveType={}));var tokens=[5,2,6,3,8,10,9,12,11,4,8,10,9,4,5,6,3,11],terrains=[Resource.Brick,Resource.Brick,Resource.Brick,Resource.Lumber,Resource.Lumber,Resource.Lumber,Resource.Lumber,Resource.Wool,Resource.Wool,Resource.Wool,Resource.Wool,Resource.Grain,Resource.Grain,Resource.Grain,Resource.Grain,Resource.Ore,Resource.Ore,Resource.Ore,Resource.Dust],harborPos=[[0,1],[0,3],[1,5],[2,0],[3,6],[4,0],[5,5],[6,1],[6,3]],harbors=[{trading:Resource.ANY,vertices:[4,5]},{trading:Resource.Grain,vertices:[3,4]},{trading:Resource.Ore,vertices:[3,4]},{trading:Resource.Lumber,vertices:[0,5]},{trading:Resource.ANY,vertices:[2,3]},{trading:Resource.Brick,vertices:[0,5]},{trading:Resource.Wool,vertices:[1,2]},{trading:Resource.ANY,vertices:[0,1]},{trading:Resource.ANY,vertices:[1,2]}],aiService;!function(a){function b(a){return d(a,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=0;d<gameLogic.ROWS;d++)for(var e=0;e<gameLogic.COLS;e++)try{}catch(f){}return c}function d(a,b){return alphaBetaService.alphaBetaDecision(a,a.turnIndexAfterMove,f,e,null,b)}function e(a,b){var c=a.endMatchScores;return c?c[0]>c[1]?Number.POSITIVE_INFINITY:c[0]<c[1]?Number.NEGATIVE_INFINITY:0:0}function f(a,b){return c(a.stateAfterMove,b)}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map